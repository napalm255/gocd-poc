---
format_version: 2
environments:
  poc:
    environment_variables:
      DEPLOYMENT: testing
    pipelines:
      - build-par
pipelines:
  setup:
    group: poc
    lock_behavior: none
    materials:
      vmware_drs:
        git: https://github.com/napalm255/ansible-vmware_drs.git
        branch: master
        destination: vmware_drs
    stages:
      - setup:
          clean_workspace: true
          jobs:
            virtualenv:
              resources:
                - python
              tasks:
                - exec:
                    command: /usr/bin/python
                    arguments:
                      - -m
                      - virtualenv
                      - venv
                - exec:
                    command: ../venv/bin/python
                    working_directory: vmware_drs
                    arguments:
                      - -m
                      - pip
                      - install
                      - -r
                      - requirements.txt
  build:
    group: poc
    lock_behavior: none
    materials:
      powerbash:
        git: https://github.com/napalm255/powerbash.git
        branch: master
        destination: powerbash
    stages:
      - build:
          clean_workspace: true
          jobs:
            build:
              resources:
                - linux
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - "echo Hello World!"
                      - ">"
                      - build_artifact.txt
      - tests:
          clean_workspace: true
          jobs:
            unit_tests:
              resources:
                - linux
              tasks:
                - fetch:
                    pipeline: build
                    stage: build
                    job: build
                    source: build_artifact.txt
                    destination: build_artifact.txt
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - "echo UNIT TESTS!"
                      - ">"
                      - unit_tests.txt
            sonar:
              resources:
                - linux
              tasks:
                - fetch:
                    pipeline: build
                    stage: build
                    job: build
                    source: build_artifact.txt
                    destination: build_artifact.txt
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - "echo SONAR!"
                      - ">"
                      - sonarqube.txt
            owasp:
              resources:
                - linux
              tasks:
                - fetch:
                    pipeline: build
                    stage: build
                    job: build
                    source: build_artifact.txt
                    destination: build_artifact.txt
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - "echo OWASP!"
                      - ">"
                      - owasp.txt
